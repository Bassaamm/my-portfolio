/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/kayn.glb 
*/

const kaynUnwantedAnimations = [
  "Kayn_Crit",
  "Kayn_Crit_GLTF_created_0",
  "Kayn_Attack3",
  "Kayn_Attack3_GLTF_created_0",
  "Kayn_Idle1_Slayer",
  "Kayn_Idle1_Slayer_GLTF_created_0",
  "Kayn_Eye_Cycle",
  "Kayn_Eye_Cycle_GLTF_created_0",
  "Kayn_Spell2_Slayer_idle",
  "Kayn_Spell2_Slayer_idle_GLTF_created_0",
  "Kayn_Spell1_Dash",
  "Kayn_Spell1_Dash_GLTF_created_0",
  "Kayn_Spell2_Slayer_run",
  "Kayn_Spell2_Slayer_run_GLTF_created_0",
  "Kayn_Channel_windup",
  "Kayn_Channel_windup_GLTF_created_0",
  "Kayn_Spell3_Run_In",
  "Kayn_Spell3_Run_In_GLTF_created_0",
  "Kayn_Run_Slayer",
  "Kayn_Run_Slayer_GLTF_created_0",
  "Kayn_Idle2",
  "Kayn_Idle2_GLTF_created_0",
  "Kayn_Idle2_Assassin",
  "Kayn_Idle2_Assassin_GLTF_created_0",
  "Kayn_Spell2_Slayer",
  "Kayn_Spell2_Slayer_GLTF_created_0",
  "Kayn_Spell2_Assassin_Cast",
  "Kayn_Spell2_Assassin_Cast_GLTF_created_0",
  "Kayn_Spell4_Air",
  "Kayn_Spell4_Air_GLTF_created_0",
  "Kayn_Spell3_Run_In",
  "Kayn_Spell3_Run_In_GLTF_created_0",
  "Kayn_Idle1_Slayer",
  "Kayn_Idle1_Slayer_GLTF_created_0",
  "Kayn_Spell4_Air",
  "Kayn_Spell4_Air_GLTF_created_0",
  "Kayn_Spell3_Idle",
  "Kayn_Spell3_Idle_GLTF_created_0",
  "Kayn_Laugh_to_Idle",
  "Kayn_Laugh_to_Idle_GLTF_created_0",
  "Kayn_Channel",
  "Kayn_Channel_GLTF_created_0",
  "Kayn_Spell1_exit_to_run",
  "Kayn_Spell1_exit_to_run_GLTF_created_0",
  "Kayn_Idle1_Assassin",
  "Kayn_Idle1_Assassin_GLTF_created_0",
  "Kayn_Spell3_Run",
  "Kayn_Spell3_Run_GLTF_created_0",
  "Kayn_Run",
  "Kayn_Run_GLTF_created_0",
  "Kayn_Idle1_loop",
  "Kayn_Idle1_loop_GLTF_created_0",
  "Kayn_Crit_GLTF_created_0",
  "Kayn_Idle1_loop_GLTF_created_0",
  "Kayn_Spell4_Hit_GLTF_created_0",
  "Kayn_Spell4_Hit",
  "kayn_Spell2_into_Run_GLTF_created_0",
  "kayn_Spell2_into_Run",
];

import React, { useState } from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF, useAnimations } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";

export function Kayn(props) {
  const group = React.useRef();
  const { scene, animations } = useGLTF("models/kayn.glb");
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions } = useAnimations(animations, group);
  const [isAnimating, setIsAnimating] = useState(false);
  const [hovered, setHovered] = useState(false);
  const handleClick = (event) => {
    event.stopPropagation();
    if (isAnimating) return;

    const actionKeys = Object.keys(actions);
    if (actionKeys.length > 0) {
      const wantedAnimations = actionKeys.filter(
        (key) => !kaynUnwantedAnimations.includes(key)
      );
      const randomAnimation =
        wantedAnimations[Math.floor(Math.random() * actionKeys.length)];
      console.log(randomAnimation);
      const action = actions[randomAnimation];

      if (action) {
        setIsAnimating(true);
        action.repetitions = 1;
        action.reset().play();

        const animationDuration = action.getClip().duration * 1000;
        setTimeout(() => {
          setIsAnimating(false);
        }, animationDuration);
      }
    }
  };

  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      onPointerEnter={(e) => (document.body.style.cursor = "pointer")}
      onPointerLeave={(e) => (document.body.style.cursor = "auto")}
    >
      <group name="Scene">
        <group
          name="Sketchfab_model002"
          position={[-0.528, 0.361, 1.822]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={0.003}
        >
          <group name="root001">
            <group name="GLTF_SceneRootNode001" rotation={[Math.PI / 2, 0, 0]}>
              <group name="skinned_mesh_0">
                <group
                  name="GLTF_created_0"
                  position={[292.697, 127.785, 36.98]}
                  rotation={[0, 2, 0]}
                  scale={0.45}
                  onClick={handleClick}
                >
                  <primitive object={nodes.GLTF_created_0_rootJoint} />
                  <skinnedMesh
                    name="Object_8"
                    geometry={nodes.Object_8.geometry}
                    material={materials["Kayn_Base_Assassin_Mat.001"]}
                    skeleton={nodes.Object_8.skeleton}
                  />
                  <skinnedMesh
                    name="Object_9"
                    geometry={nodes.Object_9.geometry}
                    material={materials["Kayn_Assassin_Hair_Mat.001"]}
                    skeleton={nodes.Object_9.skeleton}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("models/kayn.glb");
